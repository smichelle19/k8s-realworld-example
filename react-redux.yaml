#########################################################
apiVersion: v1
kind: Service
metadata:
  name: react-redux
  labels:
    app: react-redux
    tier: frontend
spec:
  type: LoadBalancer
  # type: NodePort
  ports:
  - port: 80
    targetPort: 4100
  selector:
    app: react-redux
    tier: frontend
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: react-redux
  labels:
    app: react-redux
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-redux
      tier: frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: react-redux
        tier: frontend
        version: "0"
    spec:
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: cloud.google.com/gke-preemptible
      #           operator: DoesNotExist
      containers:
        - name: react-redux
          image: gcr.io/kubernetes-271106/react-redux:latest
          imagePullPolicy: Always
          env:
            - name: LINES
              value: "42"
            - name: COLUMNS
              value: "178"
          ports:
            - containerPort: 4100
          livenessProbe:
              httpGet:
                path: /
                port: 4100
              initialDelaySeconds: 10
              timeoutSeconds: 5
              periodSeconds: 30
          readinessProbe:
              httpGet:
                path: /
                port: 4100
              initialDelaySeconds: 10
              periodSeconds: 60
              timeoutSeconds: 1
              successThreshold: 1
              failureThreshold: 10

